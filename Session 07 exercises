Exercise 1
Output on your terminal the most nested element(s).
list_a = ['agc', ['biological', 'polymers', ('extracted', [11, 54])], 'tcag', 'ccctg']

Exercise 2
Print out on your terminal a list of unique elements in descending order based on the values in the two dictionaries.
b = [{'col_1':[45,2,6,12,94,31,16,87,93,10]}, {'col_2':[78,10,88,91,6,32,5,16,17,52,42]}]
Hint 1: Lists can be added to one another
Hint 2: Remember sets

Exercise 3
Open the text document 'S07_exercise_3.txt' and parse it. Each line is a short sequence of three nucleotides. 
Output on your terminal a histogram indicating the number of nucleotide in descending order.
For example:
aca 18
taa 15
ccc 9
atg 2

Exercise 4
Parse 'S07_exercise_3.txt' and translate the sequence - refer to the codon table. Output on your terminal the peptide.
codon_table = {
    'ATA':'I', 'ATC':'I', 'ATT':'I', 'ATG':'M',
    'ACA':'T', 'ACC':'T', 'ACG':'T', 'ACT':'T',
    'AAC':'N', 'AAT':'N', 'AAA':'K', 'AAG':'K',
    'AGC':'S', 'AGT':'S', 'AGA':'R', 'AGG':'R',
    'CTA':'L', 'CTC':'L', 'CTG':'L', 'CTT':'L',
    'CCA':'P', 'CCC':'P', 'CCG':'P', 'CCT':'P',
    'CAC':'H', 'CAT':'H', 'CAA':'Q', 'CAG':'Q',
    'CGA':'R', 'CGC':'R', 'CGG':'R', 'CGT':'R',
    'GTA':'V', 'GTC':'V', 'GTG':'V', 'GTT':'V',
    'GCA':'A', 'GCC':'A', 'GCG':'A', 'GCT':'A',
    'GAC':'D', 'GAT':'D', 'GAA':'E', 'GAG':'E',
    'GGA':'G', 'GGC':'G', 'GGG':'G', 'GGT':'G',
    'TCA':'S', 'TCC':'S', 'TCG':'S', 'TCT':'S',
    'TTC':'F', 'TTT':'F', 'TTA':'L', 'TTG':'L',
    'TAC':'Y', 'TAT':'Y', 'TAA':'[STOP]', 'TAG':'[STOP]',
    'TGC':'C', 'TGT':'C', 'TGA':'[STOP]', 'TGG':'W'}
 
Exercise 5
Ask the user to input any DNA sequence and output on your terminal the translated sequence.
Hint 1: Make sure of the codon table
Hint 2: Iteration can be used with range()
Hint 3: Take note when the sequence is not divisible by three (try to figure out a way around this)
